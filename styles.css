*{
    margin:0px;
    padding:0px;
    box-sizing:border-box; 
}

body{
    position: absolute;
    background-color:mintcream;
}

#header{
    position:fixed;
    top:0px;
    height:100px;
    width:100%;
    padding:0px 100px;
    display:flex;
    justify-content:space-between;
    align-items:center;
    background-color:darkblue;
    color:white;
}
/*by default most content are border-size: content-box. So setting width at 100% will
make the content the same as the view size. Since padding is outside the width, total width will
exceed view size. Change to border-box, so padding is within width then total width will be equal to 
screen view size.*/

.logo{
    height:100%;
}

#header-img{
    height:100%;
}

.nav-list{
    list-style-type: none;
    display:flex;
    justify-content:space-around;
    width:35vw;
}

.nav-link{
    padding:3px;
    border:1px solid transparent;
    color:white;
    text-decoration: none;
}

.nav-link:hover{
    border-bottom:1px solid white;
}

#form-container{
    width:40%;
    height:70px;
    margin:150px auto 100px;
    display:flex;
    flex-direction: column;
    justify-content: space-between;
    text-align: center;
}
/*note that since input tags are inline elements they are affected by text-align center.
also note that if size of inline element exceeds width of parent they will go to next line


when using margins remember that unlike padding if two margins are contingous they will COLLAPSE
into one margin which is the larger of the two margins*/



#email, #submit{
    height:25px;
}

#features-container{
    width:70%;
    margin: 0px auto;
}

.feature{
    display:flex;
    margin:50px;
}


.icon{
    color:darkorange;
    margin:20px;
    width:20%;     
}

/*width has to increase in % as viewport decreases. Why? width of div must be greater
than width of image to standardize size. Else if width of div is smaller, width of icon will 
overflow. Element beside will take into account WIDTH OF ICON instead, thus causing width 
to be UNSTANDARDIZED again*/

#videobox{
    display:flex;
    justify-content:center;
    margin:100px;
}

#box{
    display:grid;
    grid-template-columns:1fr 1fr 1fr;
    justify-items:center;
    width:70%;
    margin:0px auto;    
    text-align:center;
    grid-gap: 10%;
}

#racket{
    max-width:100%
}

.item-desc{
    list-style-type: none;
    display:flex;
    flex-direction:column;
    margin:20px;
}

.item1, .item2, .item3{
    border-radius:5px;
    border:solid 1px black;
}

#price{
    margin:20px;
}

.btn{
    padding: 0 20px;
    height: 35px;
    font-size: 1em;
    border:0px;
    border-radius: 2px;
    background-color:dodgerblue;
    color: white;
}

.btn:hover{
    background-color:blue;
}
/*an image unlike a div tag etc will not try to fit within its parent container. Instead it will simply
overflow.*/

.footer-list{
    list-style-type: none;
    display:flex;
    justify-content:space-around;
    width:35vw;
}

footer{
    display:flex;
    justify-content:space-around;
    height:100px;
    align-items:center;
    margin-top:100px;
    background-color:beige;
}

@media(max-width:740px){
    footer{
        flex-direction:column;
    }
}

@media(max-width:650px){
        .logo{
            height:70%;
        }
        #form-container{
            margin:200px auto 100px;
        }
        #header{
            height:150px;
            flex-direction:column;
        }


}